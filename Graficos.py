{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Código Para gerar os gráficos e dashboards"
      ],
      "metadata": {
        "id": "k-s2_ViEXifn"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 115,
      "metadata": {
        "id": "9F-tQtE-Vnta"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "from IPython.display import display\n",
        "\n",
        "# Carregando a nossa base de dados, como está em csv, não precisaremos importar json, apenas o pandas para essa leitura.\n",
        "caminho_arquivo = \"US_Crime_Rates_1960_2014 1.csv"\n",
        "df = pd.read_csv(caminho_arquivo)\n",
        "\n",
        "#print(df)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "### Análise inicial, mostrando a base de dados e explicações iniciais.\n",
        "\n",
        "#Exibindo logo de início o total de crimes por todo o período\n",
        "total_crimes = \"{:,}\".format(df['Total'].sum())\n",
        "#print(\"Total de crimes:\", total_crimes)\n",
        "\n",
        "'''df['Ano'] = pd.to_datetime(df['Ano'], format='%Y')\n",
        "print(df)\n",
        "\n",
        "df_visualizacao = pd.concat([df.head(5), df.tail(5)])'''\n",
        "\n",
        "\n",
        "display(df) #Display na base de dados para vizualização inicial\n",
        "\n",
        "# Definir função para formatar números\n",
        "def format_number(value):\n",
        "    if value < 1000:\n",
        "        return f'{value}'\n",
        "    elif value < 1000000:\n",
        "        return f'{value/1000:.1f} mil'\n",
        "    else:\n",
        "        return f'{value/1000000:.1f} milhões'\n",
        "\n",
        "# Total Crimes formatada\n",
        "#print(\"Total de crimes formatado:\", format_number(total_crimes))\n",
        "\n",
        "# prints de teste\n",
        "#print(\"Primeiras linhas do DataFrame:\")\n",
        "#print(df.head())\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "qVFQY9ytXhq2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cd2d8d5d-14af-496a-f8dc-6fe0e266824b"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "     Ano  Populacao     Total  Violento  Propriedade  Homicidio  Estupro  \\\n",
              "0   1960  179323175   3384200    288460      3095700       9110    17190   \n",
              "1   1961  182992000   3488000    289390      3198600       8740    17220   \n",
              "2   1962  185771000   3752200    301510      3450700       8530    17550   \n",
              "3   1963  188483000   4109500    316970      3792500       8640    17650   \n",
              "4   1964  191141000   4564600    364220      4200400       9360    21420   \n",
              "5   1965  193526000   4739400    387390      4352000       9960    23410   \n",
              "6   1966  195576000   5223500    430180      4793300      11040    25820   \n",
              "7   1967  197457000   5903400    499930      5403500      12240    27620   \n",
              "8   1968  199399000   6720200    595010      6125200      13800    31670   \n",
              "9   1969  201385000   7410900    661870      6749000      14760    37170   \n",
              "10  1970  203235298   8098000    738820      7359200      16000    37990   \n",
              "11  1971  206212000   8588200    816500      7771700      17780    42260   \n",
              "12  1972  208230000   8248800    834900      7413900      18670    46850   \n",
              "13  1973  209851000   8718100    875910      7842200      19640    51400   \n",
              "14  1974  211392000  10253400    974720      9278700      20710    55400   \n",
              "15  1975  213124000  11292400   1039710     10252700      20510    56090   \n",
              "16  1976  214659000  11349700   1004210     10345500      18780    57080   \n",
              "17  1977  216332000  10984500   1029580      9955000      19120    63500   \n",
              "18  1978  218059000  11209000   1085550     10123400      19560    67610   \n",
              "19  1979  220099000  12249500   1208030     11041500      21460    76390   \n",
              "20  1980  225349264  13408300   1344520     12063700      23040    82990   \n",
              "21  1981  229146000  13423800   1361820     12061900      22520    82500   \n",
              "22  1982  231534000  12974400   1322390     11652000      21010    78770   \n",
              "23  1983  233981000  12108600   1258090     10850500      19310    78920   \n",
              "24  1984  236158000  11881800   1273280     10608500      18690    84230   \n",
              "25  1985  238740000  12431400   1328800     11102600      18980    88670   \n",
              "26  1986  240132887  13211869   1489169     11722700      20613    91459   \n",
              "27  1987  242282918  13508700   1483999     12024700      20096    91110   \n",
              "28  1988  245807000  13923100   1566220     12356900      20680    92490   \n",
              "29  1989  248239000  14251400   1646040     12605400      21500    94500   \n",
              "30  1990  248709873  14475600   1820130     12655500      23440   102560   \n",
              "31  1991  252177000  14872900   1911770     12961100      24700   106590   \n",
              "32  1992  255082000  14438200   1932270     12505900      23760   109060   \n",
              "33  1993  257908000  14144800   1926020     12218800      24530   106010   \n",
              "34  1994  260341000  13989500   1857670     12131900      23330   102220   \n",
              "35  1995  262755000  13862700   1798790     12063900      21610    97470   \n",
              "36  1996  265228572  13493863   1688540     11805300      19650    96250   \n",
              "37  1997  267637000  13194571   1634770     11558175      18208    96153   \n",
              "38  1998  270296000  12475634   1531044     10944590      16914    93103   \n",
              "39  1999  272690813  11634378   1426044     10208334      15522    89411   \n",
              "40  2000  281421906  11608072   1425486     10182586      15586    90178   \n",
              "41  2001  285317559  11876669   1439480     10437480      16037    90863   \n",
              "42  2002  287973924  11878954   1423677     10455277      16229    95235   \n",
              "43  2003  290690788  11826538   1383676     10442862      16528    93883   \n",
              "44  2004  293656842  11679474   1360088     10319386      16148    95089   \n",
              "45  2005  296507061  11565499   1390745     10174754      16740    94347   \n",
              "46  2006  299398484  11401511   1418043      9983568      17030    92757   \n",
              "47  2007  301621157  11251828   1408337      9843481      16929    90427   \n",
              "48  2008  304374846  11160543   1392628      9767915      16442    90479   \n",
              "49  2009  307006550  10762956   1325896      9337060      15399    89241   \n",
              "50  2010  309330219  10363873   1251248      9112625      14772    85593   \n",
              "51  2011  311587816  10258774   1206031      9052743      14661    84175   \n",
              "52  2012  313873685  10219059   1217067      9001992      14866    85141   \n",
              "53  2013  316497531   9850445   1199684      8650761      14319    82109   \n",
              "54  2014  318857056   9475816   1197987      8277829      14249    84041   \n",
              "\n",
              "    Roubo_Residencia  Assalto_Agravante  Furto_Residencia  Furto_Roubo_Geral  \\\n",
              "0             107840             154320            912100            1855400   \n",
              "1             106670             156760            949600            1913000   \n",
              "2             110860             164570            994300            2089600   \n",
              "3             116470             174210           1086400            2297800   \n",
              "4             130390             203050           1213200            2514400   \n",
              "5             138690             215330           1282500            2572600   \n",
              "6             157990             235330           1410100            2822000   \n",
              "7             202910             257160           1632100            3111600   \n",
              "8             262840             286700           1858900            3482700   \n",
              "9             298850             311090           1981900            3888600   \n",
              "10            349860             334970           2205000            4225800   \n",
              "11            387700             368760           2399300            4424200   \n",
              "12            376290             393090           2375500            4151200   \n",
              "13            384220             420650           2565500            4347900   \n",
              "14            442400             456210           3039200            5262500   \n",
              "15            470500             492620           3265300            5977700   \n",
              "16            427810             500530           3108700            6270800   \n",
              "17            412610             534350           3071500            5905700   \n",
              "18            426930             571460           3128300            5991000   \n",
              "19            480700             629480           3327700            6601000   \n",
              "20            565840             672650           3795200            7136900   \n",
              "21            592910             663900           3779700            7194400   \n",
              "22            553130             669480           3447100            7142500   \n",
              "23            506570             653290           3129900            6712800   \n",
              "24            485010             685350           2984400            6591900   \n",
              "25            497870             723250           3073300            6926400   \n",
              "26            542775             834322           3241410            7257153   \n",
              "27            517704             855088           3236184            7499900   \n",
              "28            542970             910090           3218100            7705900   \n",
              "29            578330             951710           3168200            7872400   \n",
              "30            639270            1054860           3073900            7945700   \n",
              "31            687730            1092740           3157200            8142200   \n",
              "32            672480            1126970           2979900            7915200   \n",
              "33            659870            1135610           2834800            7820900   \n",
              "34            618950            1113180           2712800            7879800   \n",
              "35            580510            1099210           2593800            7997700   \n",
              "36            535590            1037050           2506400            7904700   \n",
              "37            498534            1023201           2460526            7743760   \n",
              "38            446625             974402           2329950            7373886   \n",
              "39            409371             911740           2100739            6955520   \n",
              "40            408016             911706           2050992            6971590   \n",
              "41            423557             909023           2116531            7092267   \n",
              "42            420806             891407           2151252            7057370   \n",
              "43            414235             859030           2154834            7026802   \n",
              "44            401470             847381           2144446            6937089   \n",
              "45            417438             862220           2155448            6783447   \n",
              "46            447403             860853           2183746            6607013   \n",
              "47            445125             855856           2176140            6568572   \n",
              "48            443574             842134           2228474            6588046   \n",
              "49            408742             812514           2203313            6338095   \n",
              "50            369089             781844           2168457            6204601   \n",
              "51            354772             752423           2185140            6151095   \n",
              "52            355051             762009           2109932            6168874   \n",
              "53            345095             726575           1931835            6018632   \n",
              "54            325802             741291           1729806            5858496   \n",
              "\n",
              "    Roubo_Veiculo  \n",
              "0          328200  \n",
              "1          336000  \n",
              "2          366800  \n",
              "3          408300  \n",
              "4          472800  \n",
              "5          496900  \n",
              "6          561200  \n",
              "7          659800  \n",
              "8          783600  \n",
              "9          878500  \n",
              "10         928400  \n",
              "11         948200  \n",
              "12         887200  \n",
              "13         928800  \n",
              "14         977100  \n",
              "15        1009600  \n",
              "16         966000  \n",
              "17         977700  \n",
              "18        1004100  \n",
              "19        1112800  \n",
              "20        1131700  \n",
              "21        1087800  \n",
              "22        1062400  \n",
              "23        1007900  \n",
              "24        1032200  \n",
              "25        1102900  \n",
              "26        1224137  \n",
              "27        1288674  \n",
              "28        1432900  \n",
              "29        1564800  \n",
              "30        1635900  \n",
              "31        1661700  \n",
              "32        1610800  \n",
              "33        1563100  \n",
              "34        1539300  \n",
              "35        1472400  \n",
              "36        1394200  \n",
              "37        1354189  \n",
              "38        1240754  \n",
              "39        1152075  \n",
              "40        1160002  \n",
              "41        1228391  \n",
              "42        1246646  \n",
              "43        1261226  \n",
              "44        1237851  \n",
              "45        1235859  \n",
              "46        1192809  \n",
              "47        1095769  \n",
              "48         958629  \n",
              "49         795652  \n",
              "50         739565  \n",
              "51         716508  \n",
              "52         723186  \n",
              "53         700294  \n",
              "54         689527  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f63286d4-cee2-4746-bfcc-7f053aaab2e8\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Ano</th>\n",
              "      <th>Populacao</th>\n",
              "      <th>Total</th>\n",
              "      <th>Violento</th>\n",
              "      <th>Propriedade</th>\n",
              "      <th>Homicidio</th>\n",
              "      <th>Estupro</th>\n",
              "      <th>Roubo_Residencia</th>\n",
              "      <th>Assalto_Agravante</th>\n",
              "      <th>Furto_Residencia</th>\n",
              "      <th>Furto_Roubo_Geral</th>\n",
              "      <th>Roubo_Veiculo</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1960</td>\n",
              "      <td>179323175</td>\n",
              "      <td>3384200</td>\n",
              "      <td>288460</td>\n",
              "      <td>3095700</td>\n",
              "      <td>9110</td>\n",
              "      <td>17190</td>\n",
              "      <td>107840</td>\n",
              "      <td>154320</td>\n",
              "      <td>912100</td>\n",
              "      <td>1855400</td>\n",
              "      <td>328200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1961</td>\n",
              "      <td>182992000</td>\n",
              "      <td>3488000</td>\n",
              "      <td>289390</td>\n",
              "      <td>3198600</td>\n",
              "      <td>8740</td>\n",
              "      <td>17220</td>\n",
              "      <td>106670</td>\n",
              "      <td>156760</td>\n",
              "      <td>949600</td>\n",
              "      <td>1913000</td>\n",
              "      <td>336000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1962</td>\n",
              "      <td>185771000</td>\n",
              "      <td>3752200</td>\n",
              "      <td>301510</td>\n",
              "      <td>3450700</td>\n",
              "      <td>8530</td>\n",
              "      <td>17550</td>\n",
              "      <td>110860</td>\n",
              "      <td>164570</td>\n",
              "      <td>994300</td>\n",
              "      <td>2089600</td>\n",
              "      <td>366800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1963</td>\n",
              "      <td>188483000</td>\n",
              "      <td>4109500</td>\n",
              "      <td>316970</td>\n",
              "      <td>3792500</td>\n",
              "      <td>8640</td>\n",
              "      <td>17650</td>\n",
              "      <td>116470</td>\n",
              "      <td>174210</td>\n",
              "      <td>1086400</td>\n",
              "      <td>2297800</td>\n",
              "      <td>408300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1964</td>\n",
              "      <td>191141000</td>\n",
              "      <td>4564600</td>\n",
              "      <td>364220</td>\n",
              "      <td>4200400</td>\n",
              "      <td>9360</td>\n",
              "      <td>21420</td>\n",
              "      <td>130390</td>\n",
              "      <td>203050</td>\n",
              "      <td>1213200</td>\n",
              "      <td>2514400</td>\n",
              "      <td>472800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1965</td>\n",
              "      <td>193526000</td>\n",
              "      <td>4739400</td>\n",
              "      <td>387390</td>\n",
              "      <td>4352000</td>\n",
              "      <td>9960</td>\n",
              "      <td>23410</td>\n",
              "      <td>138690</td>\n",
              "      <td>215330</td>\n",
              "      <td>1282500</td>\n",
              "      <td>2572600</td>\n",
              "      <td>496900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1966</td>\n",
              "      <td>195576000</td>\n",
              "      <td>5223500</td>\n",
              "      <td>430180</td>\n",
              "      <td>4793300</td>\n",
              "      <td>11040</td>\n",
              "      <td>25820</td>\n",
              "      <td>157990</td>\n",
              "      <td>235330</td>\n",
              "      <td>1410100</td>\n",
              "      <td>2822000</td>\n",
              "      <td>561200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1967</td>\n",
              "      <td>197457000</td>\n",
              "      <td>5903400</td>\n",
              "      <td>499930</td>\n",
              "      <td>5403500</td>\n",
              "      <td>12240</td>\n",
              "      <td>27620</td>\n",
              "      <td>202910</td>\n",
              "      <td>257160</td>\n",
              "      <td>1632100</td>\n",
              "      <td>3111600</td>\n",
              "      <td>659800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1968</td>\n",
              "      <td>199399000</td>\n",
              "      <td>6720200</td>\n",
              "      <td>595010</td>\n",
              "      <td>6125200</td>\n",
              "      <td>13800</td>\n",
              "      <td>31670</td>\n",
              "      <td>262840</td>\n",
              "      <td>286700</td>\n",
              "      <td>1858900</td>\n",
              "      <td>3482700</td>\n",
              "      <td>783600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1969</td>\n",
              "      <td>201385000</td>\n",
              "      <td>7410900</td>\n",
              "      <td>661870</td>\n",
              "      <td>6749000</td>\n",
              "      <td>14760</td>\n",
              "      <td>37170</td>\n",
              "      <td>298850</td>\n",
              "      <td>311090</td>\n",
              "      <td>1981900</td>\n",
              "      <td>3888600</td>\n",
              "      <td>878500</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1970</td>\n",
              "      <td>203235298</td>\n",
              "      <td>8098000</td>\n",
              "      <td>738820</td>\n",
              "      <td>7359200</td>\n",
              "      <td>16000</td>\n",
              "      <td>37990</td>\n",
              "      <td>349860</td>\n",
              "      <td>334970</td>\n",
              "      <td>2205000</td>\n",
              "      <td>4225800</td>\n",
              "      <td>928400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1971</td>\n",
              "      <td>206212000</td>\n",
              "      <td>8588200</td>\n",
              "      <td>816500</td>\n",
              "      <td>7771700</td>\n",
              "      <td>17780</td>\n",
              "      <td>42260</td>\n",
              "      <td>387700</td>\n",
              "      <td>368760</td>\n",
              "      <td>2399300</td>\n",
              "      <td>4424200</td>\n",
              "      <td>948200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>1972</td>\n",
              "      <td>208230000</td>\n",
              "      <td>8248800</td>\n",
              "      <td>834900</td>\n",
              "      <td>7413900</td>\n",
              "      <td>18670</td>\n",
              "      <td>46850</td>\n",
              "      <td>376290</td>\n",
              "      <td>393090</td>\n",
              "      <td>2375500</td>\n",
              "      <td>4151200</td>\n",
              "      <td>887200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1973</td>\n",
              "      <td>209851000</td>\n",
              "      <td>8718100</td>\n",
              "      <td>875910</td>\n",
              "      <td>7842200</td>\n",
              "      <td>19640</td>\n",
              "      <td>51400</td>\n",
              "      <td>384220</td>\n",
              "      <td>420650</td>\n",
              "      <td>2565500</td>\n",
              "      <td>4347900</td>\n",
              "      <td>928800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1974</td>\n",
              "      <td>211392000</td>\n",
              "      <td>10253400</td>\n",
              "      <td>974720</td>\n",
              "      <td>9278700</td>\n",
              "      <td>20710</td>\n",
              "      <td>55400</td>\n",
              "      <td>442400</td>\n",
              "      <td>456210</td>\n",
              "      <td>3039200</td>\n",
              "      <td>5262500</td>\n",
              "      <td>977100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>1975</td>\n",
              "      <td>213124000</td>\n",
              "      <td>11292400</td>\n",
              "      <td>1039710</td>\n",
              "      <td>10252700</td>\n",
              "      <td>20510</td>\n",
              "      <td>56090</td>\n",
              "      <td>470500</td>\n",
              "      <td>492620</td>\n",
              "      <td>3265300</td>\n",
              "      <td>5977700</td>\n",
              "      <td>1009600</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>1976</td>\n",
              "      <td>214659000</td>\n",
              "      <td>11349700</td>\n",
              "      <td>1004210</td>\n",
              "      <td>10345500</td>\n",
              "      <td>18780</td>\n",
              "      <td>57080</td>\n",
              "      <td>427810</td>\n",
              "      <td>500530</td>\n",
              "      <td>3108700</td>\n",
              "      <td>6270800</td>\n",
              "      <td>966000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1977</td>\n",
              "      <td>216332000</td>\n",
              "      <td>10984500</td>\n",
              "      <td>1029580</td>\n",
              "      <td>9955000</td>\n",
              "      <td>19120</td>\n",
              "      <td>63500</td>\n",
              "      <td>412610</td>\n",
              "      <td>534350</td>\n",
              "      <td>3071500</td>\n",
              "      <td>5905700</td>\n",
              "      <td>977700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>1978</td>\n",
              "      <td>218059000</td>\n",
              "      <td>11209000</td>\n",
              "      <td>1085550</td>\n",
              "      <td>10123400</td>\n",
              "      <td>19560</td>\n",
              "      <td>67610</td>\n",
              "      <td>426930</td>\n",
              "      <td>571460</td>\n",
              "      <td>3128300</td>\n",
              "      <td>5991000</td>\n",
              "      <td>1004100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>1979</td>\n",
              "      <td>220099000</td>\n",
              "      <td>12249500</td>\n",
              "      <td>1208030</td>\n",
              "      <td>11041500</td>\n",
              "      <td>21460</td>\n",
              "      <td>76390</td>\n",
              "      <td>480700</td>\n",
              "      <td>629480</td>\n",
              "      <td>3327700</td>\n",
              "      <td>6601000</td>\n",
              "      <td>1112800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>1980</td>\n",
              "      <td>225349264</td>\n",
              "      <td>13408300</td>\n",
              "      <td>1344520</td>\n",
              "      <td>12063700</td>\n",
              "      <td>23040</td>\n",
              "      <td>82990</td>\n",
              "      <td>565840</td>\n",
              "      <td>672650</td>\n",
              "      <td>3795200</td>\n",
              "      <td>7136900</td>\n",
              "      <td>1131700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1981</td>\n",
              "      <td>229146000</td>\n",
              "      <td>13423800</td>\n",
              "      <td>1361820</td>\n",
              "      <td>12061900</td>\n",
              "      <td>22520</td>\n",
              "      <td>82500</td>\n",
              "      <td>592910</td>\n",
              "      <td>663900</td>\n",
              "      <td>3779700</td>\n",
              "      <td>7194400</td>\n",
              "      <td>1087800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>1982</td>\n",
              "      <td>231534000</td>\n",
              "      <td>12974400</td>\n",
              "      <td>1322390</td>\n",
              "      <td>11652000</td>\n",
              "      <td>21010</td>\n",
              "      <td>78770</td>\n",
              "      <td>553130</td>\n",
              "      <td>669480</td>\n",
              "      <td>3447100</td>\n",
              "      <td>7142500</td>\n",
              "      <td>1062400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>1983</td>\n",
              "      <td>233981000</td>\n",
              "      <td>12108600</td>\n",
              "      <td>1258090</td>\n",
              "      <td>10850500</td>\n",
              "      <td>19310</td>\n",
              "      <td>78920</td>\n",
              "      <td>506570</td>\n",
              "      <td>653290</td>\n",
              "      <td>3129900</td>\n",
              "      <td>6712800</td>\n",
              "      <td>1007900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>1984</td>\n",
              "      <td>236158000</td>\n",
              "      <td>11881800</td>\n",
              "      <td>1273280</td>\n",
              "      <td>10608500</td>\n",
              "      <td>18690</td>\n",
              "      <td>84230</td>\n",
              "      <td>485010</td>\n",
              "      <td>685350</td>\n",
              "      <td>2984400</td>\n",
              "      <td>6591900</td>\n",
              "      <td>1032200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>1985</td>\n",
              "      <td>238740000</td>\n",
              "      <td>12431400</td>\n",
              "      <td>1328800</td>\n",
              "      <td>11102600</td>\n",
              "      <td>18980</td>\n",
              "      <td>88670</td>\n",
              "      <td>497870</td>\n",
              "      <td>723250</td>\n",
              "      <td>3073300</td>\n",
              "      <td>6926400</td>\n",
              "      <td>1102900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>1986</td>\n",
              "      <td>240132887</td>\n",
              "      <td>13211869</td>\n",
              "      <td>1489169</td>\n",
              "      <td>11722700</td>\n",
              "      <td>20613</td>\n",
              "      <td>91459</td>\n",
              "      <td>542775</td>\n",
              "      <td>834322</td>\n",
              "      <td>3241410</td>\n",
              "      <td>7257153</td>\n",
              "      <td>1224137</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>1987</td>\n",
              "      <td>242282918</td>\n",
              "      <td>13508700</td>\n",
              "      <td>1483999</td>\n",
              "      <td>12024700</td>\n",
              "      <td>20096</td>\n",
              "      <td>91110</td>\n",
              "      <td>517704</td>\n",
              "      <td>855088</td>\n",
              "      <td>3236184</td>\n",
              "      <td>7499900</td>\n",
              "      <td>1288674</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>1988</td>\n",
              "      <td>245807000</td>\n",
              "      <td>13923100</td>\n",
              "      <td>1566220</td>\n",
              "      <td>12356900</td>\n",
              "      <td>20680</td>\n",
              "      <td>92490</td>\n",
              "      <td>542970</td>\n",
              "      <td>910090</td>\n",
              "      <td>3218100</td>\n",
              "      <td>7705900</td>\n",
              "      <td>1432900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>1989</td>\n",
              "      <td>248239000</td>\n",
              "      <td>14251400</td>\n",
              "      <td>1646040</td>\n",
              "      <td>12605400</td>\n",
              "      <td>21500</td>\n",
              "      <td>94500</td>\n",
              "      <td>578330</td>\n",
              "      <td>951710</td>\n",
              "      <td>3168200</td>\n",
              "      <td>7872400</td>\n",
              "      <td>1564800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>1990</td>\n",
              "      <td>248709873</td>\n",
              "      <td>14475600</td>\n",
              "      <td>1820130</td>\n",
              "      <td>12655500</td>\n",
              "      <td>23440</td>\n",
              "      <td>102560</td>\n",
              "      <td>639270</td>\n",
              "      <td>1054860</td>\n",
              "      <td>3073900</td>\n",
              "      <td>7945700</td>\n",
              "      <td>1635900</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>1991</td>\n",
              "      <td>252177000</td>\n",
              "      <td>14872900</td>\n",
              "      <td>1911770</td>\n",
              "      <td>12961100</td>\n",
              "      <td>24700</td>\n",
              "      <td>106590</td>\n",
              "      <td>687730</td>\n",
              "      <td>1092740</td>\n",
              "      <td>3157200</td>\n",
              "      <td>8142200</td>\n",
              "      <td>1661700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>1992</td>\n",
              "      <td>255082000</td>\n",
              "      <td>14438200</td>\n",
              "      <td>1932270</td>\n",
              "      <td>12505900</td>\n",
              "      <td>23760</td>\n",
              "      <td>109060</td>\n",
              "      <td>672480</td>\n",
              "      <td>1126970</td>\n",
              "      <td>2979900</td>\n",
              "      <td>7915200</td>\n",
              "      <td>1610800</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>1993</td>\n",
              "      <td>257908000</td>\n",
              "      <td>14144800</td>\n",
              "      <td>1926020</td>\n",
              "      <td>12218800</td>\n",
              "      <td>24530</td>\n",
              "      <td>106010</td>\n",
              "      <td>659870</td>\n",
              "      <td>1135610</td>\n",
              "      <td>2834800</td>\n",
              "      <td>7820900</td>\n",
              "      <td>1563100</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>1994</td>\n",
              "      <td>260341000</td>\n",
              "      <td>13989500</td>\n",
              "      <td>1857670</td>\n",
              "      <td>12131900</td>\n",
              "      <td>23330</td>\n",
              "      <td>102220</td>\n",
              "      <td>618950</td>\n",
              "      <td>1113180</td>\n",
              "      <td>2712800</td>\n",
              "      <td>7879800</td>\n",
              "      <td>1539300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>1995</td>\n",
              "      <td>262755000</td>\n",
              "      <td>13862700</td>\n",
              "      <td>1798790</td>\n",
              "      <td>12063900</td>\n",
              "      <td>21610</td>\n",
              "      <td>97470</td>\n",
              "      <td>580510</td>\n",
              "      <td>1099210</td>\n",
              "      <td>2593800</td>\n",
              "      <td>7997700</td>\n",
              "      <td>1472400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>1996</td>\n",
              "      <td>265228572</td>\n",
              "      <td>13493863</td>\n",
              "      <td>1688540</td>\n",
              "      <td>11805300</td>\n",
              "      <td>19650</td>\n",
              "      <td>96250</td>\n",
              "      <td>535590</td>\n",
              "      <td>1037050</td>\n",
              "      <td>2506400</td>\n",
              "      <td>7904700</td>\n",
              "      <td>1394200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>1997</td>\n",
              "      <td>267637000</td>\n",
              "      <td>13194571</td>\n",
              "      <td>1634770</td>\n",
              "      <td>11558175</td>\n",
              "      <td>18208</td>\n",
              "      <td>96153</td>\n",
              "      <td>498534</td>\n",
              "      <td>1023201</td>\n",
              "      <td>2460526</td>\n",
              "      <td>7743760</td>\n",
              "      <td>1354189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1998</td>\n",
              "      <td>270296000</td>\n",
              "      <td>12475634</td>\n",
              "      <td>1531044</td>\n",
              "      <td>10944590</td>\n",
              "      <td>16914</td>\n",
              "      <td>93103</td>\n",
              "      <td>446625</td>\n",
              "      <td>974402</td>\n",
              "      <td>2329950</td>\n",
              "      <td>7373886</td>\n",
              "      <td>1240754</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>1999</td>\n",
              "      <td>272690813</td>\n",
              "      <td>11634378</td>\n",
              "      <td>1426044</td>\n",
              "      <td>10208334</td>\n",
              "      <td>15522</td>\n",
              "      <td>89411</td>\n",
              "      <td>409371</td>\n",
              "      <td>911740</td>\n",
              "      <td>2100739</td>\n",
              "      <td>6955520</td>\n",
              "      <td>1152075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>2000</td>\n",
              "      <td>281421906</td>\n",
              "      <td>11608072</td>\n",
              "      <td>1425486</td>\n",
              "      <td>10182586</td>\n",
              "      <td>15586</td>\n",
              "      <td>90178</td>\n",
              "      <td>408016</td>\n",
              "      <td>911706</td>\n",
              "      <td>2050992</td>\n",
              "      <td>6971590</td>\n",
              "      <td>1160002</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>2001</td>\n",
              "      <td>285317559</td>\n",
              "      <td>11876669</td>\n",
              "      <td>1439480</td>\n",
              "      <td>10437480</td>\n",
              "      <td>16037</td>\n",
              "      <td>90863</td>\n",
              "      <td>423557</td>\n",
              "      <td>909023</td>\n",
              "      <td>2116531</td>\n",
              "      <td>7092267</td>\n",
              "      <td>1228391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>2002</td>\n",
              "      <td>287973924</td>\n",
              "      <td>11878954</td>\n",
              "      <td>1423677</td>\n",
              "      <td>10455277</td>\n",
              "      <td>16229</td>\n",
              "      <td>95235</td>\n",
              "      <td>420806</td>\n",
              "      <td>891407</td>\n",
              "      <td>2151252</td>\n",
              "      <td>7057370</td>\n",
              "      <td>1246646</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>2003</td>\n",
              "      <td>290690788</td>\n",
              "      <td>11826538</td>\n",
              "      <td>1383676</td>\n",
              "      <td>10442862</td>\n",
              "      <td>16528</td>\n",
              "      <td>93883</td>\n",
              "      <td>414235</td>\n",
              "      <td>859030</td>\n",
              "      <td>2154834</td>\n",
              "      <td>7026802</td>\n",
              "      <td>1261226</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>2004</td>\n",
              "      <td>293656842</td>\n",
              "      <td>11679474</td>\n",
              "      <td>1360088</td>\n",
              "      <td>10319386</td>\n",
              "      <td>16148</td>\n",
              "      <td>95089</td>\n",
              "      <td>401470</td>\n",
              "      <td>847381</td>\n",
              "      <td>2144446</td>\n",
              "      <td>6937089</td>\n",
              "      <td>1237851</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>2005</td>\n",
              "      <td>296507061</td>\n",
              "      <td>11565499</td>\n",
              "      <td>1390745</td>\n",
              "      <td>10174754</td>\n",
              "      <td>16740</td>\n",
              "      <td>94347</td>\n",
              "      <td>417438</td>\n",
              "      <td>862220</td>\n",
              "      <td>2155448</td>\n",
              "      <td>6783447</td>\n",
              "      <td>1235859</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>2006</td>\n",
              "      <td>299398484</td>\n",
              "      <td>11401511</td>\n",
              "      <td>1418043</td>\n",
              "      <td>9983568</td>\n",
              "      <td>17030</td>\n",
              "      <td>92757</td>\n",
              "      <td>447403</td>\n",
              "      <td>860853</td>\n",
              "      <td>2183746</td>\n",
              "      <td>6607013</td>\n",
              "      <td>1192809</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>2007</td>\n",
              "      <td>301621157</td>\n",
              "      <td>11251828</td>\n",
              "      <td>1408337</td>\n",
              "      <td>9843481</td>\n",
              "      <td>16929</td>\n",
              "      <td>90427</td>\n",
              "      <td>445125</td>\n",
              "      <td>855856</td>\n",
              "      <td>2176140</td>\n",
              "      <td>6568572</td>\n",
              "      <td>1095769</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>2008</td>\n",
              "      <td>304374846</td>\n",
              "      <td>11160543</td>\n",
              "      <td>1392628</td>\n",
              "      <td>9767915</td>\n",
              "      <td>16442</td>\n",
              "      <td>90479</td>\n",
              "      <td>443574</td>\n",
              "      <td>842134</td>\n",
              "      <td>2228474</td>\n",
              "      <td>6588046</td>\n",
              "      <td>958629</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>2009</td>\n",
              "      <td>307006550</td>\n",
              "      <td>10762956</td>\n",
              "      <td>1325896</td>\n",
              "      <td>9337060</td>\n",
              "      <td>15399</td>\n",
              "      <td>89241</td>\n",
              "      <td>408742</td>\n",
              "      <td>812514</td>\n",
              "      <td>2203313</td>\n",
              "      <td>6338095</td>\n",
              "      <td>795652</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>2010</td>\n",
              "      <td>309330219</td>\n",
              "      <td>10363873</td>\n",
              "      <td>1251248</td>\n",
              "      <td>9112625</td>\n",
              "      <td>14772</td>\n",
              "      <td>85593</td>\n",
              "      <td>369089</td>\n",
              "      <td>781844</td>\n",
              "      <td>2168457</td>\n",
              "      <td>6204601</td>\n",
              "      <td>739565</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>2011</td>\n",
              "      <td>311587816</td>\n",
              "      <td>10258774</td>\n",
              "      <td>1206031</td>\n",
              "      <td>9052743</td>\n",
              "      <td>14661</td>\n",
              "      <td>84175</td>\n",
              "      <td>354772</td>\n",
              "      <td>752423</td>\n",
              "      <td>2185140</td>\n",
              "      <td>6151095</td>\n",
              "      <td>716508</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>2012</td>\n",
              "      <td>313873685</td>\n",
              "      <td>10219059</td>\n",
              "      <td>1217067</td>\n",
              "      <td>9001992</td>\n",
              "      <td>14866</td>\n",
              "      <td>85141</td>\n",
              "      <td>355051</td>\n",
              "      <td>762009</td>\n",
              "      <td>2109932</td>\n",
              "      <td>6168874</td>\n",
              "      <td>723186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>2013</td>\n",
              "      <td>316497531</td>\n",
              "      <td>9850445</td>\n",
              "      <td>1199684</td>\n",
              "      <td>8650761</td>\n",
              "      <td>14319</td>\n",
              "      <td>82109</td>\n",
              "      <td>345095</td>\n",
              "      <td>726575</td>\n",
              "      <td>1931835</td>\n",
              "      <td>6018632</td>\n",
              "      <td>700294</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>2014</td>\n",
              "      <td>318857056</td>\n",
              "      <td>9475816</td>\n",
              "      <td>1197987</td>\n",
              "      <td>8277829</td>\n",
              "      <td>14249</td>\n",
              "      <td>84041</td>\n",
              "      <td>325802</td>\n",
              "      <td>741291</td>\n",
              "      <td>1729806</td>\n",
              "      <td>5858496</td>\n",
              "      <td>689527</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f63286d4-cee2-4746-bfcc-7f053aaab2e8')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f63286d4-cee2-4746-bfcc-7f053aaab2e8 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f63286d4-cee2-4746-bfcc-7f053aaab2e8');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-2d77b5f8-e1dd-4b6d-98b3-741d1d2ce632\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d77b5f8-e1dd-4b6d-98b3-741d1d2ce632')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-2d77b5f8-e1dd-4b6d-98b3-741d1d2ce632 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_7ec477ad-515f-43c8-9839-3e5566c0156d\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_7ec477ad-515f-43c8-9839-3e5566c0156d button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 55,\n  \"fields\": [\n    {\n      \"column\": \"Ano\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16,\n        \"min\": 1960,\n        \"max\": 2014,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          1991,\n          1965,\n          1992\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Populacao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41662164,\n        \"min\": 179323175,\n        \"max\": 318857056,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          252177000,\n          193526000,\n          255082000\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3175930,\n        \"min\": 3384200,\n        \"max\": 14872900,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          14872900,\n          4739400,\n          14438200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Violento\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 459710,\n        \"min\": 288460,\n        \"max\": 1932270,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          1911770,\n          387390,\n          1932270\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Propriedade\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2738511,\n        \"min\": 3095700,\n        \"max\": 12961100,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          12961100,\n          4352000,\n          12505900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Homicidio\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4267,\n        \"min\": 8530,\n        \"max\": 24700,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          24700,\n          9960,\n          23760\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estupro\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 28278,\n        \"min\": 17190,\n        \"max\": 109060,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          106590,\n          23410,\n          109060\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Roubo_Residencia\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150506,\n        \"min\": 106670,\n        \"max\": 687730,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          687730,\n          138690,\n          672480\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Assalto_Agravante\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 296025,\n        \"min\": 154320,\n        \"max\": 1135610,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          1092740,\n          215330,\n          1126970\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Furto_Residencia\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 725900,\n        \"min\": 912100,\n        \"max\": 3795200,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          3157200,\n          1282500,\n          2979900\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Furto_Roubo_Geral\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1846401,\n        \"min\": 1855400,\n        \"max\": 8142200,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          8142200,\n          2572600,\n          7915200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Roubo_Veiculo\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 345569,\n        \"min\": 328200,\n        \"max\": 1661700,\n        \"num_unique_values\": 55,\n        \"samples\": [\n          1661700,\n          496900,\n          1610800\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Total de Crimes violentos por ano\n",
        "df_crimes_violentos_por_ano = df.groupby('Ano')[['Violento']].sum()\n",
        "#print(\"Total de crimes violentos (Soma de Homicídio, Estupro, Roubo_Residência e Assalto_Agravante) por ano:\")\n",
        "#print(df_crimes_violentos_por_ano.applymap('{:,.0f}'.format))\n",
        "\n",
        "# Total de Crimes de propriedade por ano\n",
        "df_crimes_propriedade_por_ano = df.groupby('Ano')[['Propriedade']].sum()\n",
        "#print(\"Total de crimes de propriedade (Soma de Furto_Residencial, Furto_Roubo_Geral, Roubo_Veículo) por ano:\")\n",
        "#print(df_crimes_propriedade_por_ano.applymap('{:,.0f}'.format))\n",
        "\n",
        "# Total de Crimes por ano\n",
        "df_crimes_por_ano = df.groupby('Ano')[['Total']].sum()\n",
        "#print(\"Total de crimes por ano:\")\n",
        "#print(df_crimes_por_ano.applymap('{:,.0f}'.format))"
      ],
      "metadata": {
        "id": "k0aAt8sxrQBv"
      },
      "execution_count": 117,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convertendo a coluna 'Ano' para ano\n",
        "df['Ano'] = pd.to_datetime(df['Ano'], format='%Y')\n",
        "\n",
        "# Calcular a soma de crimes para cada ano\n",
        "df['Total_Crimes'] = df[['Propriedade', 'Homicidio', 'Estupro', 'Roubo_Residencia',\n",
        "                          'Assalto_Agravante', 'Furto_Residencia', 'Furto_Roubo_Geral',\n",
        "                          'Roubo_Veiculo']].sum(axis=1)\n",
        "\n",
        "# Calcular a porcentagem de cada tipo de crime para cada ano\n",
        "for col in ['Propriedade', 'Homicidio', 'Estupro', 'Roubo_Residencia',\n",
        "            'Assalto_Agravante', 'Furto_Residencia', 'Furto_Roubo_Geral', 'Roubo_Veiculo']:\n",
        "    df[col + '_Porcentagem'] = (df[col] / df['Total_Crimes']) * 100\n",
        "\n",
        "# Representando por décadas, mas antes vamos usar o cut() para formatar como será lido o a coluna Ano, para ficar apenas os anos, desconsiderando dias e mees, nossa base possui apenas os anos\n",
        "df['Decada'] = pd.cut(df['Ano'], bins=pd.interval_range(start=df['Ano'].min(), end=df['Ano'].max(), freq='10Y'))\n",
        "\n",
        "# Agrupar os dados por década e calcular a média das porcentagens de cada tipo de crime\n",
        "df_decadas = df.groupby('Decada').mean()\n",
        "\n",
        "# Gráfico de pizza por década\n",
        "def gerar_graficos_pizza(df_decadas):\n",
        "    for decada, dados_decada in df_decadas.iterrows():\n",
        "        labels = ['Propriedade', 'Homicidio', 'Estupro', 'Roubo_Residencia',\n",
        "                  'Assalto_Agravante', 'Furto_Residencia', 'Furto_Roubo_Geral', 'Roubo_Veiculo']\n",
        "        sizes = dados_decada[[col + '_Porcentagem' for col in labels]].tolist()\n",
        "        fig = px.pie(names=labels, values=sizes)\n",
        "        fig.update_traces(textinfo='percent+label')\n",
        "        fig.update_layout(title=f'Porcentagem dos Crimes na Década de {decada.left.year}s')\n",
        "        fig.show()\n",
        "\n",
        "# Testando gráfico de pizza\n",
        "#gerar_graficos_pizza(df_decadas);\n",
        "\n",
        "#   ^ Comentando tudo com hashtag pois com aspas estava bugando"
      ],
      "metadata": {
        "id": "KSCg8-SGsCH-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Calcular a soma de crimes por década\n",
        "df['Decada'] = pd.cut(df['Ano'], bins=pd.interval_range(start=df['Ano'].min(), end=df['Ano'].max(), freq='10Y'))\n",
        "df_agrupado_decadas = df.groupby('Decada')['Total'].sum().reset_index()\n",
        "\n",
        "# Converter os intervalos de década em strings\n",
        "df_agrupado_decadas['Decada'] = df_agrupado_decadas['Decada'].astype(str)\n",
        "\n",
        "# Criar o gráfico de barras\n",
        "grafico_crimes_por_decada = px.bar(\n",
        "    df_agrupado_decadas,\n",
        "    x='Decada',\n",
        "    y='Total',\n",
        "    labels={'Total': 'Total de Crimes', 'Decada': 'Década'},\n",
        "    title='Total de Crimes por Década'\n",
        ")\n",
        "\n",
        "# Atualizando gráfico apenas para deixar decrescente, facilitando para perceber qual década teve mais ou menos crimes\n",
        "#grafico_crimes_por_decada.update_layout(xaxis={'categoryorder': 'total descending'},yaxis_title='Total de Crimes',xaxis_title='Década')\n",
        "\n",
        "# Testando exibíção do gráfico\n",
        "#grafico_crimes_por_decada.show()"
      ],
      "metadata": {
        "id": "d0fZviO2z6kc"
      },
      "execution_count": 123,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Calcular a soma de crimes e população para cada ano\n",
        "df_agrupado = df.groupby('Ano').agg({'Populacao': 'sum', 'Total': 'sum'}).reset_index()\n",
        "\n",
        "# Criar o gráfico de linha\n",
        "grafico_crimes_populacao = px.line(\n",
        "    df_agrupado,\n",
        "    x='Ano',\n",
        "    y=['Populacao', 'Total'],\n",
        "    markers=True,\n",
        "    range_y=(0, df_agrupado[['Populacao', 'Total']].values.max()),\n",
        "    color_discrete_sequence=['blue', 'red'],\n",
        "    title='Total de Crimes e População ao Longo do Tempo'\n",
        ")\n",
        "\n",
        "# Atualizar o layout do gráfico\n",
        "#grafico_crimes_populacao.update_layout(yaxis_title='Quantidade',xaxis_title='Ano',legend_title='Tipo',hovermode='x unified')\n",
        "\n",
        "# Testando exibição do gráfico\n",
        "#grafico_crimes_populacao.show()\n"
      ],
      "metadata": {
        "id": "V1TrlUnru_be"
      },
      "execution_count": 121,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Agrupar os dados por década e calcular a média das porcentagens de cada tipo de crime\n",
        "df_decadas_violentos = df_decadas[['Homicidio_Porcentagem', 'Estupro_Porcentagem', 'Roubo_Residencia_Porcentagem', 'Assalto_Agravante_Porcentagem']]\n",
        "\n",
        "# Gráfico de pizza por década para crimes violentos\n",
        "def gerar_graficos_pizza_violentos(df_decadas_violentos):\n",
        "    for decada, dados_decada in df_decadas_violentos.iterrows():\n",
        "        labels = ['Homicidio', 'Estupro', 'Roubo_Residencia', 'Assalto_Agravante']\n",
        "        sizes = dados_decada.tolist()\n",
        "        fig = px.pie(names=labels, values=sizes)\n",
        "        fig.update_traces(textinfo='percent+label')\n",
        "        fig.update_layout(title=f'Porcentagem dos Crimes Violentos na Década de {decada.left.year}s')\n",
        "        fig.show()\n",
        "\n",
        "# Testando gráfico de pizza para crimes violentos\n",
        "#gerar_graficos_pizza_violentos(df_decadas_violentos)"
      ],
      "metadata": {
        "id": "VkR1TaFhYnKs"
      },
      "execution_count": 126,
      "outputs": []
    }
  ]
}
